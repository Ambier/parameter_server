// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/loss.proto

#ifndef PROTOBUF_proto_2floss_2eproto__INCLUDED
#define PROTOBUF_proto_2floss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2floss_2eproto();
void protobuf_AssignDesc_proto_2floss_2eproto();
void protobuf_ShutdownFile_proto_2floss_2eproto();

class LossConfig;

enum LossConfig_Type {
  LossConfig_Type_SQUARE = 1,
  LossConfig_Type_LOGIT = 2,
  LossConfig_Type_HINGE = 3
};
bool LossConfig_Type_IsValid(int value);
const LossConfig_Type LossConfig_Type_Type_MIN = LossConfig_Type_SQUARE;
const LossConfig_Type LossConfig_Type_Type_MAX = LossConfig_Type_HINGE;
const int LossConfig_Type_Type_ARRAYSIZE = LossConfig_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* LossConfig_Type_descriptor();
inline const ::std::string& LossConfig_Type_Name(LossConfig_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    LossConfig_Type_descriptor(), value);
}
inline bool LossConfig_Type_Parse(
    const ::std::string& name, LossConfig_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LossConfig_Type>(
    LossConfig_Type_descriptor(), name, value);
}
// ===================================================================

class LossConfig : public ::google::protobuf::Message {
 public:
  LossConfig();
  virtual ~LossConfig();

  LossConfig(const LossConfig& from);

  inline LossConfig& operator=(const LossConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LossConfig& default_instance();

  void Swap(LossConfig* other);

  // implements Message ----------------------------------------------

  LossConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LossConfig& from);
  void MergeFrom(const LossConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LossConfig_Type Type;
  static const Type SQUARE = LossConfig_Type_SQUARE;
  static const Type LOGIT = LossConfig_Type_LOGIT;
  static const Type HINGE = LossConfig_Type_HINGE;
  static inline bool Type_IsValid(int value) {
    return LossConfig_Type_IsValid(value);
  }
  static const Type Type_MIN =
    LossConfig_Type_Type_MIN;
  static const Type Type_MAX =
    LossConfig_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    LossConfig_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return LossConfig_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return LossConfig_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return LossConfig_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .LossConfig.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::LossConfig_Type type() const;
  inline void set_type(::LossConfig_Type value);

  // @@protoc_insertion_point(class_scope:LossConfig)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2floss_2eproto();
  friend void protobuf_AssignDesc_proto_2floss_2eproto();
  friend void protobuf_ShutdownFile_proto_2floss_2eproto();

  void InitAsDefaultInstance();
  static LossConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// LossConfig

// required .LossConfig.Type type = 1;
inline bool LossConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LossConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LossConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LossConfig::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::LossConfig_Type LossConfig::type() const {
  return static_cast< ::LossConfig_Type >(type_);
}
inline void LossConfig::set_type(::LossConfig_Type value) {
  assert(::LossConfig_Type_IsValid(value));
  set_has_type();
  type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LossConfig_Type>() {
  return ::LossConfig_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2floss_2eproto__INCLUDED
