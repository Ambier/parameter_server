// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/learner.proto

#ifndef PROTOBUF_proto_2flearner_2eproto__INCLUDED
#define PROTOBUF_proto_2flearner_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2flearner_2eproto();
void protobuf_AssignDesc_proto_2flearner_2eproto();
void protobuf_ShutdownFile_proto_2flearner_2eproto();

class LearnerConfig;
class AggGradLearnerArg;

enum LearnerConfig_Type {
  LearnerConfig_Type_GRADIENT_DESCENT = 1,
  LearnerConfig_Type_PROXIMAL_GRADIENT = 2,
  LearnerConfig_Type_LBFGS = 3
};
bool LearnerConfig_Type_IsValid(int value);
const LearnerConfig_Type LearnerConfig_Type_Type_MIN = LearnerConfig_Type_GRADIENT_DESCENT;
const LearnerConfig_Type LearnerConfig_Type_Type_MAX = LearnerConfig_Type_LBFGS;
const int LearnerConfig_Type_Type_ARRAYSIZE = LearnerConfig_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* LearnerConfig_Type_descriptor();
inline const ::std::string& LearnerConfig_Type_Name(LearnerConfig_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    LearnerConfig_Type_descriptor(), value);
}
inline bool LearnerConfig_Type_Parse(
    const ::std::string& name, LearnerConfig_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LearnerConfig_Type>(
    LearnerConfig_Type_descriptor(), name, value);
}
// ===================================================================

class LearnerConfig : public ::google::protobuf::Message {
 public:
  LearnerConfig();
  virtual ~LearnerConfig();

  LearnerConfig(const LearnerConfig& from);

  inline LearnerConfig& operator=(const LearnerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LearnerConfig& default_instance();

  void Swap(LearnerConfig* other);

  // implements Message ----------------------------------------------

  LearnerConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LearnerConfig& from);
  void MergeFrom(const LearnerConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LearnerConfig_Type Type;
  static const Type GRADIENT_DESCENT = LearnerConfig_Type_GRADIENT_DESCENT;
  static const Type PROXIMAL_GRADIENT = LearnerConfig_Type_PROXIMAL_GRADIENT;
  static const Type LBFGS = LearnerConfig_Type_LBFGS;
  static inline bool Type_IsValid(int value) {
    return LearnerConfig_Type_IsValid(value);
  }
  static const Type Type_MIN =
    LearnerConfig_Type_Type_MIN;
  static const Type Type_MAX =
    LearnerConfig_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    LearnerConfig_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return LearnerConfig_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return LearnerConfig_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return LearnerConfig_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .LearnerConfig.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::LearnerConfig_Type type() const;
  inline void set_type(::LearnerConfig_Type value);

  // optional float learning_rate = 2 [default = 1];
  inline bool has_learning_rate() const;
  inline void clear_learning_rate();
  static const int kLearningRateFieldNumber = 2;
  inline float learning_rate() const;
  inline void set_learning_rate(float value);

  // @@protoc_insertion_point(class_scope:LearnerConfig)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_learning_rate();
  inline void clear_has_learning_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  float learning_rate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2flearner_2eproto();
  friend void protobuf_AssignDesc_proto_2flearner_2eproto();
  friend void protobuf_ShutdownFile_proto_2flearner_2eproto();

  void InitAsDefaultInstance();
  static LearnerConfig* default_instance_;
};
// -------------------------------------------------------------------

class AggGradLearnerArg : public ::google::protobuf::Message {
 public:
  AggGradLearnerArg();
  virtual ~AggGradLearnerArg();

  AggGradLearnerArg(const AggGradLearnerArg& from);

  inline AggGradLearnerArg& operator=(const AggGradLearnerArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AggGradLearnerArg& default_instance();

  void Swap(AggGradLearnerArg* other);

  // implements Message ----------------------------------------------

  AggGradLearnerArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AggGradLearnerArg& from);
  void MergeFrom(const AggGradLearnerArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float learning_rate = 1 [default = 1];
  inline bool has_learning_rate() const;
  inline void clear_learning_rate();
  static const int kLearningRateFieldNumber = 1;
  inline float learning_rate() const;
  inline void set_learning_rate(float value);

  // @@protoc_insertion_point(class_scope:AggGradLearnerArg)
 private:
  inline void set_has_learning_rate();
  inline void clear_has_learning_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float learning_rate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2flearner_2eproto();
  friend void protobuf_AssignDesc_proto_2flearner_2eproto();
  friend void protobuf_ShutdownFile_proto_2flearner_2eproto();

  void InitAsDefaultInstance();
  static AggGradLearnerArg* default_instance_;
};
// ===================================================================


// ===================================================================

// LearnerConfig

// required .LearnerConfig.Type type = 1;
inline bool LearnerConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LearnerConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LearnerConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LearnerConfig::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::LearnerConfig_Type LearnerConfig::type() const {
  return static_cast< ::LearnerConfig_Type >(type_);
}
inline void LearnerConfig::set_type(::LearnerConfig_Type value) {
  assert(::LearnerConfig_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional float learning_rate = 2 [default = 1];
inline bool LearnerConfig::has_learning_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LearnerConfig::set_has_learning_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LearnerConfig::clear_has_learning_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LearnerConfig::clear_learning_rate() {
  learning_rate_ = 1;
  clear_has_learning_rate();
}
inline float LearnerConfig::learning_rate() const {
  return learning_rate_;
}
inline void LearnerConfig::set_learning_rate(float value) {
  set_has_learning_rate();
  learning_rate_ = value;
}

// -------------------------------------------------------------------

// AggGradLearnerArg

// optional float learning_rate = 1 [default = 1];
inline bool AggGradLearnerArg::has_learning_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AggGradLearnerArg::set_has_learning_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AggGradLearnerArg::clear_has_learning_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AggGradLearnerArg::clear_learning_rate() {
  learning_rate_ = 1;
  clear_has_learning_rate();
}
inline float AggGradLearnerArg::learning_rate() const {
  return learning_rate_;
}
inline void AggGradLearnerArg::set_learning_rate(float value) {
  set_has_learning_rate();
  learning_rate_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LearnerConfig_Type>() {
  return ::LearnerConfig_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2flearner_2eproto__INCLUDED
