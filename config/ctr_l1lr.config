# configuration to run l1-regularized logistic regression on ctr4m
# see src/proto/app.proto for more details
# a sample way to run
# mpirun -np 6 ./ps_mpi -num_servers 1 -num_workers 4 -num_threads 2 -app ../config/ctr_l1lr.config

type: RISK_MINIMIZATION
app_name: "CTR"
parameter_name: "CTR_w"

model_output {
format: TEXT
}

training_data {
format: PROTO
file: "../data/ctrb/train/part-.*"
}

validation_data {
format: PROTO
file: "../data/ctrb/test/part-.*"
}

loss {
type: LOGIT
}

# lambda * \| w \|_1
penalty {
type: L1
lambda: 5
}

learning_rate {
type: CONSTANT
eta: 1
}

block_solver {
# turn it off for debug use
random_feature_block_order : true

# block-coordinate updating. We divide a feature group into feature_block_ratio
# x nnz_feature_per_instance blocks. If = 0, then use all features
feature_block_ratio : 4

max_pass_of_data : 20

# bounded-delay consistency
max_block_delay : 8

# convergance critiria. stop if the relative objective <= epsilon
epsilon : 1e-4
}

bcd_l1lr {
delta_init_value : 1
delta_max_value : 5

# increasing this number reduces the effect of kkt filter.
kkt_filter_threshold_ratio : 1
}
